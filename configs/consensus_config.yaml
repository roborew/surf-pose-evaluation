# Consensus-based pseudo-ground-truth configuration
# Shared across Optuna optimization and comparison testing

consensus:
  enabled: true

  generation:
    # Session to use for consensus generation (determined by session analyzer)
    consensus_session: "SESSION_070325" # Will be updated by analyzer

    # Models to include in consensus generation
    consensus_models:
      - "yolov8"
      - "pytorch_pose"
      - "mmpose"

    # Models excluded from consensus (will use consensus from others)
    excluded_models:
      - "mediapipe"
      - "blazepose"

    # Cache directory for pre-generated consensus data
    cache_path: "./data/consensus_cache"

  quality_filter:
    # Composite scoring weights (must sum to 1.0)
    composite_weights:
      confidence: 0.4 # Model confidence score weight
      stability: 0.4 # Temporal stability weight
      completeness: 0.2 # Skeleton completeness weight

    # Multi-stage percentile schedule based on optimization progress
    percentile_schedule:
      initialization: 70.0 # First 10% of trials - conservative (keep top 30%)
      growth: 80.0 # Middle 60% of trials - standard (keep top 20%)
      saturation: 75.0 # Final 30% of trials - prevent overfitting (keep top 25%)

    # Minimum keypoints to retain after filtering
    min_keypoints: 5

  data_splits:
    # Enable session-level grouping to prevent data leakage
    # Keeps FULL/WIDE/standard variants of same session together
    session_level_grouping: true

    # Random seed for reproducible splits
    random_seed: 42

    # Ratio for splitting non-consensus sessions
    optuna_ratio: 0.5 # 50% of remaining sessions for Optuna

    # Session assignments (auto-generated by session analyzer)
    # These will be populated when session analysis runs
    consensus_sessions: []
    optuna_sessions: []
    comparison_sessions: []

  leave_one_out:
    # Enable leave-one-out validation to prevent circular reasoning
    enabled: true

    # Generate separate consensus for each model being optimized
    # Model X is evaluated against consensus from models Y and Z
    per_model_consensus: true

# Validation settings specific to each phase

optuna_validation:
  # Use consensus-based validation for hyperparameter tuning
  use_consensus: true

  # Number of clips for Optuna validation (from non-consensus sessions)
  num_clips: 75

  # Number of Optuna trials (reduced to prevent validation overfitting)
  n_trials: 50

  # Cameras to include in Optuna validation
  cameras:
    - "SONY_300"
    - "SONY_70"

comparison_validation:
  # Use consensus-based validation for final model comparison
  use_consensus: true

  # Number of clips for comparison validation (from non-consensus sessions)
  num_clips: 200

  # Cameras to include in comparison validation
  cameras:
    - "SONY_300"
    - "SONY_70"

# Quality reporting settings

quality_reporting:
  # Generate detailed consensus quality reports
  enabled: true

  # Metrics to track
  track_metrics:
    - "inter_model_agreement"
    - "keypoint_coverage_per_frame"
    - "quality_score_distribution"
    - "temporal_consistency"
    - "per_maneuver_quality"
    - "data_leakage_check"

  # Output directory for quality reports
  report_path: "./results/consensus_quality_reports"
