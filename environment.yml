name: surf_pose_eval
channels:
  - pytorch
  - nvidia
  - conda-forge
  - defaults

dependencies:
  # Core Python and system
  - python=3.10
  - pip
  - setuptools
  - wheel

  # CUDA and PyTorch ecosystem (matches system CUDA 12.6)
  - pytorch=2.1.*
  - torchvision=0.16.*
  - torchaudio=2.1.*
  - pytorch-cuda=12.1

  # Core ML and scientific computing
  - numpy>=1.24,<1.25
  - scipy>=1.11,<1.12
  - scikit-learn>=1.3,<1.4
  - pandas>=2.0,<2.1
  - matplotlib>=3.7,<3.8
  - seaborn>=0.12,<0.13
  - pillow>=9.0,<10.0

  # Media processing (imageio only - ffmpeg installed by system)
  - imageio>=2.31
  - imageio-ffmpeg>=0.4

  # Code quality and testing
  - black>=23.0
  - flake8>=6.0
  - pytest>=7.0
  - pytest-cov>=4.0

  # Visualization
  - plotly>=5.15

  # ML experiment tracking and optimization
  - mlflow>=2.5
  - optuna>=3.2
  - tensorboard>=2.13

  # Pose estimation dependencies
  - cython>=0.29
  - pyyaml>=6.0
  - requests>=2.31
  - tqdm>=4.65
  - terminaltables>=3.1

  # Additional utilities
  - click>=8.1
  - colorama>=0.4
  - rich>=13.0
  - typer>=0.9

  # Pip dependencies for pose estimation packages
  - pip:
      - opencv-python==4.8.0.76
       # MM packages handled by create_surf_pose_env.sh script
      # - mmcv (installed from cache)
      # - mmengine (installed from cache)
      # - mmdet (installed from cache)
      # - mmpose (installed in dev mode)
      - mediapipe==0.10.14
      - ultralytics==8.0.165
      - xtcocotools==1.12

# Environment variables for CUDA optimization
variables:
  CUDA_VISIBLE_DEVICES: "0" # Use first GPU by default
  PYTORCH_CUDA_ALLOC_CONF: "max_split_size_mb:128" # Optimize memory allocation
